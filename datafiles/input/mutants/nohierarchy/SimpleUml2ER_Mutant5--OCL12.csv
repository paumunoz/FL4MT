;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Ncf: Number of failed test cases that cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nus: Number of successful test cases that cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Ncs: Number of successful test cases that cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nus: number of successful test cases that do not cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nc: total number of test cases that cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nu:total number of test cases that do not cover the rule
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Ns: total number of successful test cases
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;Nf: total number of failed test cases
;OCL12;SrcPackage.allInstances()->forAll(p | TrgERModel.allInstances()->exists(e | p.name = e.name and p.ownedElements->forAll(class | e.entities->exists(entity | entity.name = class.name and class.ownedProperty->forAll(prop | prop.complexType.oclIsUndefined() implies entity.features-> exists(f | TrgAttribute.allInstances()-> exists(a | a=f and a.type = if prop.primitiveType.oclIsUndefined() then 'NoType' else prop.primitiveType endif)))))))        
Buggy Rule;Rules;TC1;TC2;TC3;TC4;TC5;TC6;TC7;TC8;TC9;TC10;TC11;TC12;TC13;TC14;TC15;TC16;TC17;TC18;TC19;TC20;TC21;TC22;TC23;TC24;TC25;TC26;TC27;TC28;TC29;TC30;TC31;TC32;TC33;TC34;TC35;TC36;TC37;TC38;TC39;TC40;TC41;TC42;TC43;TC44;TC45;TC46;TC47;TC48;TC49;TC50;TC51;TC52;TC53;TC54;TC55;TC56;TC57;TC58;TC59;TC60;TC61;TC62;TC63;TC64;TC65;TC66;TC67;TC68;TC69;TC70;TC71;TC72;TC73;TC74;TC75;TC76;TC77;TC78;TC79;TC80;TC81;TC82;TC83;TC84;TC85;TC86;TC87;TC88;TC89;TC90;TC91;TC92;TC93;TC94;TC95;TC96;TC97;TC98;TC99;TC100;Ncf;Nuf;Ncs;Nus;Nc;Nu;Ns;Nf;Cohen;Braun-Banquet;Simple Matching;Kulcynski2;Barinel;Arithmetic Mean;Mountford;Zoltar;Ochiai;Phi;Op2;Russel Rao;Baroni-Urbani & Buser;Pierce;Ochiai2;Rogers & Tanimoto;DStar;Tarantula;
;WeakReferences;;;;;;;;;;;;;X;;;;;;;;;;;;;;;;;;;;;;;X;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;X;;;;;;;;;1.0;10.0;2.0;87.0;3.0;97.0;89.0;11.0;0.10044977511244378;0.09090909090909091;0.88;0.2121212121212121;0.33333333333333337;0.10551181102362205;0.038461538461538464;4.999675021123627E-6;0.17407765595569785;0.12552694585358914;0.9777777777777777;0.01;0.4625432760617778;0.015592515592515593;0.16296714346989297;0.7857142857142857;0.08333333333333333;0.8018018018018018;
X;Attributes;;;;;;;X;;;;X;;X;;;;;;;;;;;;;;;;;;;;;;;X;X;;;;;;;;;X;;X;;;;;;X;;;;;X;;;;;;;;;;;X;;;;;;;X;;;;;;;;;;;X;;;;X;;;;;;;;;11.0;0.0;2.0;87.0;13.0;87.0;89.0;11.0;0.9053926206244087;0.8461538461538461;0.98;0.9230769230769231;0.8461538461538461;0.9071090047393365;1.0;0.8461538461538461;0.9198662110077999;0.909471908847024;10.977777777777778;0.11;0.9544786380799085;0.0;0.9093854866365321;0.9607843137254902;60.5;0.978021978021978;
;Class;X;;;;;;X;;;X;X;;X;;;;;X;;X;;;;;X;;;X;;;;;;;;X;X;;;X;X;X;;;;X;;X;X;X;;;;X;;;;;X;;;;;;;;;;;X;;;;;;X;X;;;X;;;;;X;;X;X;;;;X;X;;;;;;;;11.0;0.0;18.0;71.0;29.0;71.0;89.0;11.0;0.4646044021415824;0.3793103448275862;0.82;0.6896551724137931;0.3793103448275862;0.5141540487162607;0.1111111111111111;0.3793103448275862;0.6158817620514397;0.5500871686057616;10.8;0.11;0.6839131674892721;0.0;0.5500484266618924;0.6949152542372882;6.722222222222222;0.8317757009345794;
;Package;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;X;11.0;0.0;89.0;0.0;100.0;0.0;89.0;11.0;0.0;0.11;0.11;0.555;0.10999999999999999;0.0;0.02247191011235955;0.11;0.33166247903553997;0.0;10.011111111111111;0.11;0.11;0.0;0.0;0.0582010582010582;1.3595505617977528;0.5;
;StrongReferences;;;;;;;X;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;X;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;X;;;;;;;;;;;;;;;X;;;;;;;;;3.0;8.0;1.0;88.0;4.0;96.0;89.0;11.0;0.3626062322946176;0.2727272727272727;0.91;0.5113636363636364;0.75;0.3756419662509171;0.13953488372093023;1.1244939777100305E-4;0.45226701686664544;0.417525502351727;2.988888888888889;0.03;0.681394239304606;0.021052631578947368;0.4305029610326133;0.8348623853211009;1.0;0.9604316546762589;
;;Pass;Pass;Pass;Pass;Pass;Pass;Fail;Pass;Pass;Pass;Fail;Pass;Fail;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Fail;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Fail;Pass;Fail;Pass;Pass;Pass;Pass;Pass;Fail;Pass;Pass;Pass;Pass;Fail;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Fail;Pass;Pass;Pass;Pass;Pass;Pass;Fail;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Fail;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;Pass;
